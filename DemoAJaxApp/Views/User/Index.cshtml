@{
    ViewData["Title"] = "User Management";
}

<h2>@ViewData["Title"]</h2>

<!-- Button to fetch user data -->
<button id="loadUsersButton">Load Users</button>

<!-- Button to add new user -->
<button id="addUserButton">Add User</button>

<!-- User list display -->
<ul id="userList"></ul>

<!-- Modal to add user -->
<div id="addUserModal" style="display:none;">

    <label for="username">Username: </label>
    <input type="text" id="username" />

    <label for="age">Age: </label>
    <input type="number" id="age" />

    <button id="saveUserButton">Save User</button>
    <button id="cancelButton">Cancel</button>
</div>

<!-- Modal to edit user -->
<div id="editUserModal" style="display:none;">
    <label for="editUsername">Username: </label>
    <input type="text" id="editUsername" />

    <label for="editAge">Age: </label>
    <input type="number" id="editAge" />

    <button id="updateUserButton">Update User</button>
    <button id="cancelEditButton">Cancel</button>
</div>

@section Scripts {
    <script>
        // Load users
        document.getElementById("loadUsersButton").addEventListener("click", function () {
            fetch('/User/GetUsers')
                .then(response => response.json())
                .then(data => {
                    const userList = document.getElementById("userList");
                    userList.innerHTML = ''; // Clear previous list
                    data.forEach(user => {
                        const li = document.createElement("li");
                        li.textContent = `${user.username} - Age: ${user.age} `;

                        // Add Edit and Delete buttons
                        const editButton = document.createElement("button");
                        editButton.textContent = "Edit";
                        editButton.addEventListener("click", () => editUser(user));

                        const deleteButton = document.createElement("button");
                        deleteButton.textContent = "Delete";
                        deleteButton.addEventListener("click", () => deleteUser(user));

                        li.appendChild(editButton);
                        li.appendChild(deleteButton);

                        userList.appendChild(li);
                    });
                });
        });

        // Add user
        document.getElementById("addUserButton").addEventListener("click", function () {
            document.getElementById("addUserModal").style.display = "block";
        });

        document.getElementById("saveUserButton").addEventListener("click", function () {
            const username = document.getElementById("username").value;
            const age = parseInt(document.getElementById("age").value);
            const newUser = { username, age };

            fetch('/User/AddUser', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(newUser)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('User added successfully!');
                        document.getElementById("addUserModal").style.display = "none";
                        document.getElementById("username").value = '';
                        document.getElementById("age").value = '';
                        document.getElementById("loadUsersButton").click(); // Reload user list
                    } else {
                        alert('Failed to add user');
                    }
                });
        });

        document.getElementById("cancelButton").addEventListener("click", function () {
            document.getElementById("addUserModal").style.display = "none";
        });

        // Edit user
        function editUser(user) {
            document.getElementById("editUserModal").style.display = "block";
            document.getElementById("editUsername").value = user.username;
            document.getElementById("editAge").value = user.age;
            document.getElementById("updateUserButton").onclick = function () {
                const updatedUser = {
                    id: user.id,
                    username: document.getElementById("editUsername").value,
                    age: parseInt(document.getElementById("editAge").value)
                };

                fetch('/User/UpdateUser', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(updatedUser)
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert('User updated successfully!');
                            document.getElementById("editUserModal").style.display = "none";
                            document.getElementById("loadUsersButton").click(); // Reload user list
                        } else {
                            alert('Failed to update user');
                        }
                    });
            };
        }

        document.getElementById("cancelEditButton").addEventListener("click", function () {
            document.getElementById("editUserModal").style.display = "none";
        });

        // Delete user
        function deleteUser(user) {
            if (confirm('Are you sure you want to delete this user?')) {
                fetch('/User/DeleteUser', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ id: user.id })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert('User deleted successfully!');
                            document.getElementById("loadUsersButton").click(); // Reload user list
                        } else {
                            alert('Failed to delete user');
                        }
                    });
            }
        }
    </script>
}
